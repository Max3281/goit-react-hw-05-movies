{"version":3,"file":"static/js/828.d7ea1d80.chunk.js","mappings":"2NAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,yFAC+BC,MAAM,sCAAD,OACMD,EADN,qEADpC,cACQD,EADR,OAKQG,EAAeH,EAAeI,OALtC,kBAOSD,GAPT,mEAUA,M,SAV8B,GAAfH,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,2BCuDf,EAlDa,WACX,IAAQK,GAAaC,EAAAA,EAAAA,MAAbD,SAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,GAAc,gBAAKC,UAAU,0BAgBnC,IAdAC,EAAAA,EAAAA,YAAU,WACRZ,EAAeK,GACZQ,MAAK,SAAAC,GACJ,IAAMC,EAAaD,EAAIE,KAAKC,QAC1B,SAAAC,GAAG,MAAiC,WAA7BA,EAAIC,oBAAR,IAGLV,EAAWM,EACZ,IACAK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAAChB,IAEJiB,QAAQC,IAAIf,GAERA,EACF,OACE,eAAIG,UAAU,kBAAd,SACGH,EAAQgB,KAAI,SAAAC,GAAG,OACd,eAAsBd,UAAU,iBAAhC,UACE,eACEe,KAAI,4CAAuCD,EAAIxB,GAA3C,YAAiDwB,EAAIE,MACzDhB,UAAU,OAFZ,UAIIc,EAAIG,eACJ,gBACEC,IA5BE,kCA4BeJ,EAAIG,aACrBE,IAAKL,EAAIE,KACThB,UAAU,eAGZD,GACF,cAAGC,UAAU,aAAb,SAA2Bc,EAAIE,OAC9BF,EAAIM,YACH,eAAGpB,UAAU,kBAAb,iBAAoCc,EAAIM,iBAfrCN,EAAIO,QADC,KAuBvB,C","sources":["API/receiveCredits.js","components/Cast/Cast.jsx"],"sourcesContent":["async function receiveCredits(id) {\n  const receiveCredits = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=41c0b9645bddc9a823d77ecad6385ef5&language=en-US`\n  );\n\n  const parseCredits = receiveCredits.json();\n\n  return parseCredits;\n}\n\nexport default receiveCredits;\n","import receiveCredits from 'API/receiveCredits';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n\n  const [credits, setCredits] = useState(null);\n\n  const posterURL = 'https://image.tmdb.org/t/p/w500';\n  const notFoundURL = <div className=\"actor-img-placeholder\"></div>;\n\n  useEffect(() => {\n    receiveCredits(moviesId)\n      .then(rej => {\n        const actorsList = rej.cast.filter(\n          act => act.known_for_department === 'Acting'\n        );\n\n        setCredits(actorsList);\n      })\n      .catch(err => console.log(err));\n  }, [moviesId]);\n\n  console.log(credits);\n\n  if (credits)\n    return (\n      <ul className=\"cast-list-block\">\n        {credits.map(tao => (\n          <li key={tao.cast_id} className=\"cast-list-item\">\n            <a\n              href={`https://www.themoviedb.org/person/${tao.id}-${tao.name}`}\n              className=\"text\"\n            >\n              {(tao.profile_path && (\n                <img\n                  src={posterURL + tao.profile_path}\n                  alt={tao.name}\n                  className=\"actor-img\"\n                />\n              )) ||\n                notFoundURL}\n              <p className=\"actor-text\">{tao.name}</p>\n              {tao.character && (\n                <p className=\"actor-text curv\">as: {tao.character}</p>\n              )}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n};\n\nexport default Cast;\n"],"names":["receiveCredits","id","fetch","parseCredits","json","moviesId","useParams","useState","credits","setCredits","notFoundURL","className","useEffect","then","rej","actorsList","cast","filter","act","known_for_department","catch","err","console","log","map","tao","href","name","profile_path","src","alt","character","cast_id"],"sourceRoot":""}