{"version":3,"file":"static/js/941.38966296.chunk.js","mappings":"8JAAQA,EAASC,EAAQ,IAAjBD,KAmBR,UAjBkB,WAChB,OACE,qBAASE,UAAU,aAAnB,WACE,cAAGA,UAAU,aAAb,2GAIA,SAACF,EAAD,CAAMG,GAAI,IAAKD,UAAU,kBAAzB,sBAGA,SAACF,EAAD,CAAMG,GAAI,UAAWD,UAAU,kBAA/B,sCAKL,C,2GCjBcE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,yFAC2BC,MAAM,sCAAD,OACUD,EADV,8CADhC,cACQE,EADR,OAKQC,EAAeD,EAAWE,OALlC,kBAOSD,GAPT,kEAUA,M,SAV+B,GAAhBJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mCCiCf,EA9B4B,SAAC,GAAa,IAAXM,EAAU,EAAVA,IAC7B,OACE,iCACE,qBAASR,UAAU,uBAAnB,WACE,eAAIA,UAAU,mBAAd,qCACA,gBAAIA,UAAU,oBAAd,WACE,eAAIA,UAAU,YAAd,UACE,SAAC,EAAAF,KAAD,CAAMG,GAAG,OAAOQ,MAAO,CAAEC,KAAMF,GAAOR,UAAU,kBAAhD,qBAIF,eAAIA,UAAU,YAAd,UACE,SAAC,EAAAF,KAAD,CACEG,GAAG,UACHQ,MAAO,CAAEC,KAAMF,GACfR,UAAU,kBAHZ,8BAWN,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,ECAD,EA/BuB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAsCD,EAAtCC,OAAQC,EAA8BF,EAA9BE,YAAaC,EAAiBH,EAAjBG,aAKvBC,EAAU,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAQI,KAAI,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IAAcC,KAAK,MAC/CC,EAASP,EAJG,kCAIuBA,EAHrB,GAIdQ,EAAcP,GAA8B,GAIlD,OAFAQ,QAAQC,IAAIZ,IAGV,qBAASb,UAAU,mBAAnB,WACE,gBAAK0B,IAAKJ,EAAQK,IAAKd,EAAKe,MAAO5B,UAAU,wBAC7C,iBAAKA,UAAU,QAAf,WACE,gBAAIA,UAAU,gBAAd,UACGa,EAAKe,MADR,KACiBL,EADjB,QAGA,eAAGvB,UAAU,aAAb,yBAAuCa,EAAKgB,iBAE5C,eAAI7B,UAAU,gBAAd,uBACA,cAAGA,UAAU,aAAb,SAA2Ba,EAAKiB,YAEhC,eAAI9B,UAAU,gBAAd,qBACA,cAAGA,UAAU,aAAb,SAA2BiB,SAIlC,E,SCkBD,EAvCqB,WAAO,IAAD,EACjBc,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAa,UAAGP,EAASxB,aAAZ,aAAG,EAAgBC,KAatC,OAXA+B,EAAAA,EAAAA,YAAU,WACRvC,EAAgB6B,GACbW,MAAK,SAAAC,GACJ,GAAwB,KAApBA,EAAIC,YAAoB,OAAOL,GAAe,GAElDF,EAAUM,GACVnB,QAAQC,IAAIkB,EACb,IACAE,OAAM,SAAAC,GAAG,OAAItB,QAAQC,IAAIqB,EAAhB,GACb,GAAE,CAACf,KAGF,iCACE,SAAC,EAAAjC,KAAD,CACEG,GAAIuC,GAAiB,IACrB/B,MAAO,CAAEC,KAAMuB,GACfjC,UAAU,aAHZ,qBAQCsC,IAAe,SAACS,EAAA,QAAD,IAEfX,IAAU,SAAC,EAAD,CAAgBvB,KAAMuB,IAEhCA,IAAU,SAAC,EAAD,CAAqB5B,IAAKgC,MAG1C,C","sources":["pages/ErrorPage/ErrorPage.jsx","API/getMovieDetails.js","components/MovieAdditionalInfo/MovieAdditionalInfo.jsx","components/MovieInfoBlock/MovieInfoBlock.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const { Link } = require('react-router-dom');\n\nconst ErrorPage = () => {\n  return (\n    <section className=\"error-page\">\n      <p className=\"error-text\">\n        Sorry, there was found nothing. You may return to the Home page or\n        search for another title.\n      </p>\n      <Link to={'/'} className=\"error-page-exit\">\n        Go home\n      </Link>\n      <Link to={'/movies'} className=\"error-page-exit\">\n        Search another article\n      </Link>\n    </section>\n  );\n};\n\nexport default ErrorPage;\n","async function getMovieDetails(id) {\n  const getDetails = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=41c0b9645bddc9a823d77ecad6385ef5`\n  );\n\n  const parseDetails = getDetails.json();\n\n  return parseDetails;\n}\n\nexport default getMovieDetails;\n","import { Link, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nconst MovieAdditionalInfo = ({ loc }) => {\n  return (\n    <>\n      <section className=\"movie-add-info-block\">\n        <h3 className=\"more-info-header\">Additional information</h3>\n        <ul className=\"more-info-options\">\n          <li className=\"more-info\">\n            <Link to=\"cast\" state={{ from: loc }} className=\"info-list-style\">\n              Cast\n            </Link>\n          </li>\n          <li className=\"more-info\">\n            <Link\n              to=\"reviews\"\n              state={{ from: loc }}\n              className=\"info-list-style\"\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieAdditionalInfo;\n","const MovieInfoBlock = ({ data }) => {\n  const { genres, poster_path, release_date } = data;\n\n  const posterURL = 'https://image.tmdb.org/t/p/w500';\n  const notFoundURL = '';\n\n  const genresList = genres?.map(uuk => uuk.name).join('/ ');\n  const poster = poster_path ? posterURL + poster_path : notFoundURL;\n  const releaseDate = release_date ? release_date : '';\n\n  console.log(data);\n\n  return (\n    <section className=\"movie-info-block\">\n      <img src={poster} alt={data.title} className=\"movie-block-poster\" />\n      <div className=\"color\">\n        <h1 className=\"movie-article\">\n          {data.title} ({releaseDate})\n        </h1>\n        <p className=\"movie-info\">User score: {data.vote_average}</p>\n\n        <h2 className=\"movie-article\">Overview</h2>\n        <p className=\"movie-info\">{data.overview}</p>\n\n        <h2 className=\"movie-article\">Genres</h2>\n        <p className=\"movie-info\">{genresList}</p>\n      </div>\n    </section>\n  );\n};\n\nexport default MovieInfoBlock;\n","import getMovieDetails from 'API/getMovieDetails';\nimport MovieAdditionalInfo from 'components/MovieAdditionalInfo/MovieAdditionalInfo';\nimport MovieInfoBlock from 'components/MovieInfoBlock/MovieInfoBlock';\nimport ErrorPage from 'pages/ErrorPage/ErrorPage';\n\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n\n  const [detail, setDetail] = useState(null);\n  const [zeroDetails, setZeroDetails] = useState(false);\n\n  const checkLocation = location.state?.from;\n\n  useEffect(() => {\n    getMovieDetails(moviesId)\n      .then(rej => {\n        if (rej.status_code === 34) return setZeroDetails(true);\n\n        setDetail(rej);\n        console.log(rej);\n      })\n      .catch(err => console.log(err));\n  }, [moviesId]);\n\n  return (\n    <>\n      <Link\n        to={checkLocation || '/'}\n        state={{ from: location }}\n        className=\"link-style\"\n      >\n        Go back\n      </Link>\n\n      {zeroDetails && <ErrorPage />}\n\n      {detail && <MovieInfoBlock data={detail} />}\n\n      {detail && <MovieAdditionalInfo loc={checkLocation} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Link","require","className","to","getMovieDetails","id","fetch","getDetails","parseDetails","json","loc","state","from","Suspense","fallback","data","genres","poster_path","release_date","genresList","map","uuk","name","join","poster","releaseDate","console","log","src","alt","title","vote_average","overview","moviesId","useParams","location","useLocation","useState","detail","setDetail","zeroDetails","setZeroDetails","checkLocation","useEffect","then","rej","status_code","catch","err","ErrorPage"],"sourceRoot":""}