{"version":3,"file":"static/js/689.84198a19.chunk.js","mappings":"qKAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,yFACyBC,MAAM,2GAAD,OACiFD,EADjF,+BAD9B,cACQE,EADR,OAKQC,EAAaD,EAASE,OAL9B,kBAOSD,GAPT,kEAUA,I,SAVyB,GAAVJ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,qDCAAM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,sGACgCJ,MAC5B,2FAFJ,cACQK,EADR,OAIQC,EAAkBD,EAAgBF,OAJ1C,kBAKSG,GALT,kEAQA,I,WAReF,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,6HCAAG,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,yFAC+BR,MAAM,sCAAD,OACMQ,EADN,4EADpC,cACQD,EADR,OAKQE,EAAeF,EAAeJ,OALtC,kBAOSM,GAPT,mEAUA,M,SAV8B,GAAfF,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,2BCiFf,EA1EgB,WACd,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,UAASC,OAAO,IAA9C,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BH,EAAAA,EAAAA,UAAS,MAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAIA,OAFsBP,EAASQ,MAAMC,KAAKC,UAGxC,IAAK,IACH,KACElB,EAAAA,EAAAA,KACGmB,MAAK,YAAkB,IAChBC,EADe,EAAdC,QACsBC,QAC3B,SAAAC,GAAI,OAAIA,EAAKC,QAAUlB,GAAYiB,EAAK5B,OAASW,CAA7C,IAGNO,EAAWF,OAAOS,EAAa,GAAGhB,IACnC,IACAqB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAGf,CAFC,MAAOA,GACPC,QAAQC,IAAIF,EACb,CACD,MACF,IAAK,WACHhC,EAAAA,EAAAA,GAAUY,GACPa,MAAK,YAAkB,IAChBC,EADe,EAAdC,QACsBC,QAC3B,SAAAC,GAAI,OAAIA,EAAKC,QAAUlB,GAAYiB,EAAK5B,OAASW,CAA7C,IAGNO,EAAWF,OAAOS,EAAa,GAAGhB,IACnC,IACAqB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IAkBlB,OAZAG,EAAAA,EAAAA,YAAU,WACQ,IAAZjB,GAEJT,EAAeS,GACZO,MAAK,SAAAW,GACJf,EAAWe,EAAIT,QAChB,IACAI,OAAM,SAAAM,GAAG,OAAIJ,QAAQC,IAAIG,EAAhB,GACb,GAAE,CAACnB,IAEJe,QAAQC,IAAId,GAERA,GAA8B,IAAnBA,EAAQkB,QACd,2EAELlB,GAEA,wBACGA,EAAQmB,KAAI,SAAAC,GAAK,OAChB,2BACE,0BAKE,wBAAKA,EAAMC,YAEb,uBAAID,EAAME,YARHF,EAAMC,OADC,WAHxB,CAiBD,C","sources":["API/findMovie.js","API/trendingMovieFetch.js","API/receiveReviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["async function findMovie(name) {\n  const getMovie = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=41c0b9645bddc9a823d77ecad6385ef5&language=en-US&query=${name}&page=1&include_adult=true`\n  );\n\n  const parseMovie = getMovie.json();\n\n  return parseMovie;\n}\n\nexport default findMovie;\n","async function TrendingMoviesFetch() {\n  const trendMovieFetch = await fetch(\n    'https://api.themoviedb.org/3/trending/all/week?api_key=41c0b9645bddc9a823d77ecad6385ef5'\n  );\n  const parseTrendMovie = trendMovieFetch.json();\n  return parseTrendMovie;\n}\n\nexport default TrendingMoviesFetch;\n","async function receiveReviews(id) {\n  const receiveReviews = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=41c0b9645bddc9a823d77ecad6385ef5&language=en-US&page=1`\n  );\n\n  const parseReviews = receiveReviews.json();\n\n  return parseReviews;\n}\n\nexport default receiveReviews;\n","import TrendingMoviesFetch from 'API/trendingMovieFetch';\nimport findMovie from 'API/findMovie';\nimport receiveReviews from 'API/receiveReviews';\n\nimport { useState, useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n\n  const [movieId, setMovieId] = useState(Number(0));\n  const [reviews, setReviews] = useState(null);\n\n  const checkLocation = location.state.from.pathname;\n\n  switch (checkLocation) {\n    case '/':\n      try {\n        TrendingMoviesFetch()\n          .then(({ results }) => {\n            const findTheMovie = results.filter(\n              echo => echo.title === moviesId || echo.name === moviesId\n            );\n\n            setMovieId(Number(findTheMovie[0].id));\n          })\n          .catch(error => console.log(error));\n      } catch (error) {\n        console.log(error);\n      }\n      break;\n    case '/movies':\n      findMovie(moviesId)\n        .then(({ results }) => {\n          const findTheMovie = results.filter(\n            echo => echo.title === moviesId || echo.name === moviesId\n          );\n\n          setMovieId(Number(findTheMovie[0].id));\n        })\n        .catch(error => console.log(error));\n      break;\n    default:\n      break;\n  }\n\n  useEffect(() => {\n    if (movieId === 0) return;\n\n    receiveReviews(movieId)\n      .then(rej => {\n        setReviews(rej.results);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  console.log(reviews);\n\n  if (reviews && reviews.length === 0)\n    return <div>Sorry, there is no any reviews for this title</div>;\n\n  if (reviews)\n    return (\n      <ul>\n        {reviews.map(ponch => (\n          <li key={ponch.author}>\n            <div>\n              {/* <img\n                src={ponch.author_details.avatar_path.slice(1)}\n                alt={ponch.author}\n              /> */}\n              <h2>{ponch.author}</h2>\n            </div>\n            <p>{ponch.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n};\n\nexport default Reviews;\n"],"names":["findMovie","name","fetch","getMovie","parseMovie","json","TrendingMoviesFetch","trendMovieFetch","parseTrendMovie","receiveReviews","id","parseReviews","moviesId","useParams","location","useLocation","useState","Number","movieId","setMovieId","reviews","setReviews","state","from","pathname","then","findTheMovie","results","filter","echo","title","catch","error","console","log","useEffect","rej","err","length","map","ponch","author","content"],"sourceRoot":""}