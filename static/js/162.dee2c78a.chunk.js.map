{"version":3,"file":"static/js/162.dee2c78a.chunk.js","mappings":"oKAEMA,EAAY,CAChBC,eAAgB,QAkClB,IA/BkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,eAAIC,UAAU,aAAd,SACGH,EAAKI,KAAI,SAAAC,GAAQ,IAAD,EACf,OACE,eAAiBF,UAAU,kBAA3B,UACE,UAAC,EAAAG,KAAD,CACEC,GAAE,kBAAaF,EAAIG,IACnBC,MAAO,CAAEC,KAAMT,GACfU,MAAOb,EAHT,UAKIO,EAAIO,cACJ,gBACEC,IAdE,kCAceR,EAAIO,YACrBE,IAAKT,EAAIU,KACTZ,UAAU,wBAER,gBAAKA,UAAU,wBACrB,cAAGA,UAAU,mBAAb,mBAAiCE,EAAIW,aAArC,QAA8CX,EAAIU,WAb7CV,EAAIG,GAiBhB,KAGN,C,oHCnCcS,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBF,GAAzB,yFACyBG,MAAM,2GAAD,OACiFH,EADjF,+BAD9B,cACQI,EADR,OAKQC,EAAaD,EAASE,OAL9B,kBAOSD,GAPT,kEAUA,M,SAVyB,GAAVH,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,0BC+Cf,EA1Ce,WACb,OAAkCK,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACHF,GAELX,EAAUW,GAAOG,MAAK,SAAAC,GAAI,OAAIR,EAAaQ,EAAKC,QAAtB,GAC3B,GAAE,CAACL,IAYJ,OACE,iCACE,kBAAMM,SAZW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMR,EAAQO,EAAEE,OAAOT,MAAMU,MAAMC,cAAcC,OAE5CZ,GAELD,EAAgB,CAAEC,MAAAA,GACnB,EAIiCzB,UAAU,mBAAxC,WACE,kBACEsC,KAAK,OACL1B,KAAK,QACL2B,aAAa,MACbC,aAAcf,EACdgB,YAAY,qBACZzC,UAAU,wBAEZ,mBAAQsC,KAAK,SAAStC,UAAU,sBAAhC,uBAIDoB,IAAa,SAACsB,EAAA,EAAD,CAAW7C,KAAMuB,MAGpC,C","sources":["components/MovieItem/MovieItem.jsx","API/findMovie.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst linkStyle = {\n  textDecoration: 'none',\n};\n\nconst MovieItem = ({ data }) => {\n  const location = useLocation();\n\n  const posterURL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <ul className=\"movie-list\">\n      {data.map(val => {\n        return (\n          <li key={val.id} className=\"movie-page-card\">\n            <Link\n              to={`/movies/${val.id}`}\n              state={{ from: location }}\n              style={linkStyle}\n            >\n              {(val.poster_path && (\n                <img\n                  src={posterURL + val.poster_path}\n                  alt={val.name}\n                  className=\"movie-page-poster\"\n                />\n              )) || <div className=\"poster-placeholder\"></div>}\n              <p className=\"movie-page-title\">{val.title ?? val.name}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MovieItem;\n","async function findMovie(name) {\n  const getMovie = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=41c0b9645bddc9a823d77ecad6385ef5&language=en-US&query=${name}&page=1&include_adult=true`\n  );\n\n  const parseMovie = getMovie.json();\n\n  return parseMovie;\n}\n\nexport default findMovie;\n","import { useEffect, useState } from 'react';\nimport findMovie from 'API/findMovie';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movieData, setMovieData] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n\n    findMovie(query).then(rook => setMovieData(rook.results));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const query = e.target.query.value.toLowerCase().trim();\n\n    if (!query) return;\n\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"movie-page-input\">\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          defaultValue={query}\n          placeholder=\"Enter a movie name\"\n          className=\"movie-input-search\"\n        />\n        <button type=\"submit\" className=\"movie-search-button\">\n          Search\n        </button>\n      </form>\n      {movieData && <MovieItem data={movieData} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["linkStyle","textDecoration","data","location","useLocation","className","map","val","Link","to","id","state","from","style","poster_path","src","alt","name","title","findMovie","fetch","getMovie","parseMovie","json","useState","movieData","setMovieData","useSearchParams","searchParams","setSearchParams","query","get","useEffect","then","rook","results","onSubmit","e","preventDefault","target","value","toLowerCase","trim","type","autoComplete","defaultValue","placeholder","MovieItem"],"sourceRoot":""}